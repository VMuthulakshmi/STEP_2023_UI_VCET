{"ast":null,"code":"var _jsxFileName = \"/Users/siriusit/Desktop/STEP_2023_UI_VCET/react STEP/src/pages/RestaurantList.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"../styles/restaurantListPageStyles.css\";\nimport HeaderBar from \"../components/HeaderBar\";\nimport { RestaurantService } from \"../services/RestaurantService\";\nimport RestaurantCard from \"../components/RestaurantCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantList = () => {\n  _s();\n  //TODO: initalize retsturant state.\n\n  /**\n  * Fetch the list of restaurants from RestaurantService and updates the component state.\n  * Sets the state to display loading indicator during data fetch from service.\n  */\n  async function fetchRestaurantList() {\n    setRestaurantState({\n      ...restaurantState,\n      isLoading: true\n    });\n    let restaurantsList = await RestaurantService.getRestaurantsList();\n  }\n  useEffect(() => {\n    fetchRestaurantList();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurant-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurant-list-wrapper child\",\n      children: restaurantState.data.map(res => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(RestaurantCard, {\n            restaurant: res\n          }, res.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RestaurantList;\nexport default RestaurantList;\nvar _c;\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"names":["useEffect","useState","HeaderBar","RestaurantService","RestaurantCard","jsxDEV","_jsxDEV","RestaurantList","_s","fetchRestaurantList","setRestaurantState","restaurantState","isLoading","restaurantsList","getRestaurantsList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","map","res","restaurant","id","_c","$RefreshReg$"],"sources":["/Users/siriusit/Desktop/STEP_2023_UI_VCET/react STEP/src/pages/RestaurantList.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"../styles/restaurantListPageStyles.css\";\nimport HeaderBar from \"../components/HeaderBar\";\nimport { RestaurantService } from \"../services/RestaurantService\";\nimport RestaurantCard from \"../components/RestaurantCard\";\n\nconst RestaurantList = () => {\n\n//TODO: initalize retsturant state.\n\n  /**\n * Fetch the list of restaurants from RestaurantService and updates the component state.\n * Sets the state to display loading indicator during data fetch from service.\n */\n  async function fetchRestaurantList() {\n    setRestaurantState({...restaurantState, isLoading:true})\n    let restaurantsList = await RestaurantService.getRestaurantsList();\n   \n  }\n\n  useEffect(() => {\n    fetchRestaurantList();\n  }, [])\n\n\n  return (\n    <div className=\"restaurant-list-container\">\n      <HeaderBar />\n      <div className=\"restaurant-list-wrapper child\">\n        {restaurantState.data.map(res => {\n          return (\n            <div>\n              <RestaurantCard\n                key={res.id}\n                restaurant={res}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default RestaurantList;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,wCAAwC;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,iBAAiB,QAAQ,+BAA+B;AACjE,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE7B;;EAEE;AACF;AACA;AACA;EACE,eAAeC,mBAAmBA,CAAA,EAAG;IACnCC,kBAAkB,CAAC;MAAC,GAAGC,eAAe;MAAEC,SAAS,EAAC;IAAI,CAAC,CAAC;IACxD,IAAIC,eAAe,GAAG,MAAMV,iBAAiB,CAACW,kBAAkB,CAAC,CAAC;EAEpE;EAEAd,SAAS,CAAC,MAAM;IACdS,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACEH,OAAA;IAAKS,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACxCV,OAAA,CAACJ,SAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbd,OAAA;MAAKS,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EAC3CL,eAAe,CAACU,IAAI,CAACC,GAAG,CAACC,GAAG,IAAI;QAC/B,oBACEjB,OAAA;UAAAU,QAAA,eACEV,OAAA,CAACF,cAAc;YAEboB,UAAU,EAAED;UAAI,GADXA,GAAG,CAACE,EAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAZ,EAAA,CApCKD,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}